#!/usr/bin/perl

# Copyright (C) 2010   Keith Amling, keith.amling@gmail.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

$| = 1;

use strict;
use warnings;

use FindBin;
use lib "$FindBin::RealBin/../libs";

use Amling::Git::Utils;
use Getopt::Long;

my @minus_options;

my @options =
(
    "minus=s" => \@minus_options,
);

GetOptions(@options) || die;

for my $arg (@ARGV)
{
    my %h;
    my $cb = sub
    {
        my $h = shift;
        $h{$h->{'hash'}} = $h;
    };
    Amling::Git::Utils::log_commits(['--boundary', (map { "^" . $_ } @minus_options), $arg], $cb);

    my @lines;
    dump_commits(\@lines, '', {}, \%h, Amling::Git::Utils::convert_commitlike($arg), '0000000000000000000000000000000000000000');

    print map { "$_\n" } reverse(@lines);
}

sub dump_commits
{
    my $lines = shift;
    my $indent = shift;
    my $already = shift;
    my $data = shift;
    my $commit = shift;
    my $free_parent = shift;

    if($commit eq $free_parent)
    {
        return;
    }

    my $prefix;
    my $cdata = $data->{$commit} || die "No data for $commit?";
    if($cdata->{'decoration'} eq '-')
    {
        $prefix = '(-)';
    }
    elsif($already->{$commit})
    {
        $prefix = '(v)';
    }
    else
    {
        $prefix = '';
        my @parents = @{$cdata->{'parents'}};
        if(0)
        {
        }
        elsif(@parents == 0)
        {
        }
        elsif(@parents == 1)
        {
            dump_commits($lines, $indent, $already, $data, $parents[0], $free_parent);
        }
        elsif(@parents == 2)
        {
            dump_commits($lines, $indent, $already, $data, $parents[0], $free_parent);
            dump_commits($lines, "$indent  ", $already, $data, $parents[1], $parents[0]);
        }
        else
        {
            # TODO: could probably do something nicer but this is so rare
            # e.g.  rewrite parents of (A, B, C, D) to (A, "B,C,D") and fill in implicit parents of "B,C,D" as (B, "C,D"), etc.
            dump_commits($lines, $indent, $already, $data, $parents[0], $free_parent);
            for(my $i = @parents - 1; $i > 0; --$i)
            {
                dump_commits($lines, "$indent    ", $already, $data, $parents[$i], '0000000000000000000000000000000000000000');
                push @$lines, "$indent  ($i)";
            }
        }

        $already->{$commit} = 1;
    }

    push @$lines, $indent . $prefix . substr($commit, 0, 12) . ' ' . $cdata->{'subj'};
}
