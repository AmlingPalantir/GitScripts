#!/usr/bin/perl

$| = 1;

use strict;
use warnings;

no warnings ('recursion');

use FindBin;
use lib "$FindBin::RealBin/../libs";

use Amling::Git::Utils;

if(@ARGV < 1)
{
    die "Usage: $0 <main branch> <query commit>...";
}

my $master = shift;
my $master_commit = Amling::Git::Utils::convert_commitlike($master);

for my $query (@ARGV)
{
    my $query_commit = Amling::Git::Utils::convert_commitlike($query);

    my %parentses;
    {
        open(my $fh, '-|', 'git', 'rev-list', '--ancestry-path', '--parents', "^$query_commit", $master_commit) || die "Could not open git rev-list ...: $!";
        while(my $l = <$fh>)
        {
            chomp $l;
            if($l =~ /^[0-9a-f]{40}( [0-9a-f]{40})*$/)
            {
                my @p = split(/ /, $l);
                my $c = shift @p;
                $parentses{$c} = \@p;
            }
            else
            {
                die "Bad git rev-list output: $l";
            }
        }
        close($fh) || die "Could not close git rev-list ...: $!";
    }

    my $path = find(\%parentses, $master_commit, $query_commit, {});
    if(!defined($path))
    {
        print "$query: ?\n";
    }
    else
    {
        print "$query:\n";
        for my $commit (@$path)
        {
            print "    $commit " . Amling::Git::Utils::log_commit($commit)->{'subj'} . "\n";
        }
    }
}

sub find
{
    my $parentses = shift;
    my $commit = shift;
    my $query_commit = shift;
    my $already_checked = shift;

    if($query_commit eq $commit)
    {
        return [$commit];
    }

    if($already_checked->{$commit})
    {
        return undef;
    }
    $already_checked->{$commit} = 1;

    my $parents = $parentses->{$commit};
    return undef unless(defined($parents));

    if(@$parents)
    {
        my $path = find($parentses, $parents->[0], $query_commit, $already_checked);
        return $path if(defined($path));
    }

    for(my $i = 1; $i < @$parents; ++$i)
    {
        my $path = find($parentses, $parents->[$i], $query_commit, $already_checked);
        return [$commit, @$path] if(defined($path));
    }

    return undef;
}
