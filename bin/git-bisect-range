#!/usr/bin/perl

# Copyright (C) 2010   Keith Amling, keith.amling@gmail.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

$| = 1;

use strict;
use warnings;

my $bad = undef;
my %good;
{
    open(my $fh, "-|", "git", "bisect", "log") || die "Cannot open 'git bisect log'";
    while(my $line = <$fh>)
    {
        if($line =~ /^git bisect bad ([0-9a-f]{40})$/)
        {
            $bad = $1;
        }
        if($line =~ /^git bisect good ([0-9a-f]{40})$/)
        {
            $good{$1} = 1;
        }
    }
    close($fh) || die "Cannot close 'git bisect log'";
}

if(!%good)
{
    die "Nothing good?";
}
if(!defined($bad))
{
    die "Nothing bad?";
}

my @good;
{
    open(my $fh, '-|', 'git', 'merge-base', '--independent', sort(keys(%good))) || die "Cannot open 'git merge-base --independent ...'";
    while(my $line = <$fh>)
    {
        chomp $line;
        push @good, $line;
    }
    close($fh) || die "Cannot close 'git merge-base --independent ...'";
}

print join(" ", map { "^$_" } sort(@good)) . " $bad\n";
